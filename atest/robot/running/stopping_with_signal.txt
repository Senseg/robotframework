*** Settings ***
Force Tags      regression
Default Tags    pybot  jybot
Resource        atest_resource.txt
Library  ProcessManager.py
Library  JavaStarter.py

*** Test Cases ***
SIGINT Signal Should Stop Test Execution Gracefully
    Start And Send Signal  without_any_timeout.txt  One Signal  SIGINT  0s
    Process Output For Graceful Shutdown
    Check Test Cases Have Failed Correctly

SIGTERM Signal Should Stop Test Execution Gracefully
    Start And Send Signal  without_any_timeout.txt  One Signal  SIGTERM  0s
    Process Output For Graceful Shutdown
    Check Test Cases Have Failed Correctly

One Signal Should Stop Test Execution Gracefully When Run Keyword Is Used
    Start And Send Signal  run_keyword.txt  One Signal  SIGTERM  0s
    Process Output For Graceful Shutdown
    Check Test Cases Have Failed Correctly

One Signal Should Stop Test Execution Gracefully When Test Timeout Is Used
    Start And Send Signal  test-timeout.txt  One Signal  SIGTERM  0s
    Process Output For Graceful Shutdown
    Check Test Cases Have Failed Correctly

One Signal Should Stop Test Execution Gracefully When Keyword Timeout Is Used
    Start And Send Signal  keyword-timeout.txt  One Signal  SIGTERM  0s
    Process Output For Graceful Shutdown
    Check Test Cases Have Failed Correctly

Two SIGINT Signals Should Stop Test Execution Forcefully
    Start And Send Signal  without_any_timeout.txt  Two Signals  SIGINT  1s
    Check Tests Have Been Forced To Shutdown

Two SIGTERM Signals Should Stop Test Execution Forcefully
    Start And Send Signal  without_any_timeout.txt  Two Signals  SIGTERM  1s
    Check Tests Have Been Forced To Shutdown

Two Signals Should Stop Test Execution Forcefully When Run Keyword Is Used
    Start And Send Signal  run_keyword.txt  Two Signals  SIGINT  1s
    Check Tests Have Been Forced To Shutdown

Two Signals Should Stop Test Execution Forcefully When Test Timeout Is Used
    Start And Send Signal  test-timeout.txt  Two Signals  SIGINT  1s
    Check Tests Have Been Forced To Shutdown

Two Signals Should Stop Test Execution Forcefully When Keyword Timeout Is Used
    Start And Send Signal  keyword-timeout.txt  Two Signals  SIGINT  1s
    Check Tests Have Been Forced To Shutdown

*** Key Words ***
Start And Send Signal
    [arguments]  ${testcase file}  ${signal method}  ${signal}  ${teardown sleep}
    Remove File  ${TEMPDIR}/robot_signal_test_started.txt
    ${is_jython_in_use} =  Running On Jython  ${INTERPRETER}
    Run Keyword unless  ${is_jython_in_use}  Start Running Robot  running/stopping_with_signal/${testcase file}  ${teardown sleep}
    Run Keyword if  ${is_jython_in_use}  Start Running jybot  running/stopping_with_signal/${testcase file}  ${teardown sleep}
    Wait Until Created  ${TEMPDIR}/robot_signal_test_started.txt
    Run Keyword  ${signal method}  ${signal}
    wait until finished

Start Running Robot
    [arguments]  ${datasource}  ${teardown sleep}
    Set Runners
    ${path to datasource} =  Set Variables And Get Datasources  ${datasource}
    ProcessManager.start process  ${ROBOT} --output ${OUTFILE} --report None --log None --variable TEARDOWNSLEEP:${teardown sleep} ${path to datasource}

Start Running Jybot
    [arguments]  ${datasource}  ${teardown sleep}
    ${jybot} =  Get Jython Path
    Set Runners
    ${path to datasource} =  Set Variables And Get Datasources  ${datasource}
    ${robot_jybot} =  Join Path  ${ROBOTPATH}  runner.py
    log  ${jybot} ${robot_jybot} --output ${OUTFILE} --report None --log None ${path to datasource}
    ProcessManager.start process  ${jybot} ${robot_jybot} --output ${OUTFILE} --report None --log None --variable TEARDOWNSLEEP:${teardown sleep} ${path to datasource}

Check Test Cases Have Failed Correctly
    Check Test Case  Test  FAIL  Execution terminated by signal
    Check Test Case  Test2  FAIL  Test execution is stopped due to a fatal error

Check Tests Have Been Forced To Shutdown
    ${stderr string}  ProcessManager.Get Stderr
    Should Contain  ${stderr string}  Execution forcefully stopped

Process Output For Graceful Shutdown
    Wait Until Created  ${OUTFILE}
    Process Output  ${OUTFILE}

One Signal
	[arguments]  ${signal}
	send terminate  ${signal}

Two Signals
	[arguments]  ${signal}
	send terminate  ${signal}
	Sleep  0.1s
	send terminate  ${signal}
