*** Settings ***
Documentation   Testing rebot's include/exclude functionality. Tests also include/excludeg first during test execution and then with rebot.
Suite Setup     Create Input
Suite Teardown  Remove Temps
Test Setup      Empty Directory  ${MYOUTDIR}
Default Tags    regression  pybot  jybot
Resource        rebot_resource.html
Test Template   Run And Check Include And Exclude

*** Variables ***
${TESTFILE}     tags/include_and_exclude.txt
${MYOUTDIR}     ${TEMPDIR}${/}robot-test-145435
${INPUT FILE}   ${TEMPDIR}${/}robot-test-145435.xml
${ESCAPES}      --escape star:STAR --escape quest:QUEST --escape amp:AMP
@{INCL_ALL}     Incl-1  Incl-12  Incl-123
@{EXCL_ALL}     Excl-1  Excl-12  Excl-123
@{ALL}  @{INCL_ALL}  @{EXCL_ALL}

*** Test Cases ***
No Includes Or Excludes
    ${EMPTY}  @{ALL}

One Include
    --include incl1  @{INCL_ALL}

Matching And Non Matching Includes
    -i INCL3 -i nonexisting  Incl-123

More Includes
    -i incl2 --include incl3 -i _ --include incl2  Incl-12  Incl-123

Includes With AND
    [Documentation]  Testing including like "--include tag1&tag2" both with "&" and "AND"
    --include incl1ANDincl2  Incl-12  Incl-123
    -i incl1AMPincl2AMPincl3  Incl-123

Include With Patterns
    --include incl?  @{INCL_ALL}
    -i STARcl3 -i iSTAR2  Incl-12  Incl-123  Excl-123
    -i i?*3ANDFORCE --include iSTAR  @{INCL_ALL}

One Exclude
    --exclude excl1  @{INCL_ALL}

Matching And Non Matching Excludes
    -e EXCL3 -e nonexisting  @{INCL_ALL}  Excl-1  Excl-12

More Excludes
    --exclude excl3 -e excl2  @{INCL_ALL}  Excl-1

Exclude With AND
    --exclude excl1AMPexcl2  @{INCL_ALL}  Excl-1
    -e excl1AMPexcl2ANDexcl3  @{INCL_ALL}  Excl-1  Excl-12

Exclude With Patterns
    --exclude exc??  @{INCL_ALL}
    -e STAR3 -e eSTAR2 -e eSTAR1  Incl-1  Incl-12

Include And Exclude
    [Documentation]  Include and exclude together with and without patterns and ANDing
    -i force --exclude excl2  @{INCL_ALL}  Excl-1
    --include STARcl2 -i nonex -e e???2 -i forceANDi*1  @{INCL_ALL}

Include with NOT
    --include incl1NOTincl3  Incl-1  Incl-12

Exclude with NOT
    --exclude excl1NOTexcl2ANDexcl3  Excl-123  @{INCL_ALL}

Include and Exclude with NOT
    --include incl1NOTincl3 --exclude incl1NOTincl2  Incl-12

Non Matching Include
    [Template]    Run And Check Error
    --include nonex  with tag 'nonex'
    --include nonex -i nonex2  with tags 'nonex' or 'nonex2'

Non Matching Exclude
    --exclude nonexisting -e nonex2 -e nonex3  @{ALL}

Non Matching Include And Exclude
    [Template]    Run And Check Error
    -i nonex -e nonex2  with tag 'nonex' and without tag 'nonex2'
    --include nonex -i incl? -e STAR1 -e STAR2 -e STAR3  with tags 'nonex' or 'incl?' and without tags '*1', '*2' or '*3'

Including With Robot And Including And Excluding With Rebot
    [Setup]  Create Output With Robot  ${INPUT FILE}  --include incl1 --exclude nonexisting  ${TESTFILE}
    -i iSTAR2STAR -e nonexisting -e incl3  Incl-12

Excluding With Robot And Including And Excluding Without Matching Rebot
    [Setup]  Create Output With Robot  ${INPUT FILE}  -i incl1 --exclude excl*  ${TESTFILE}
    -e nonexisting -e excl3  @{INCL_ALL}

Elapsed Time
    [Documentation]  Test setting start, end and elapsed times correctly when filtering by tags
    [Template]  NONE
    Comment  1) Rebot hand-edited output with predefined times and  check that times are read correctly.
    Run Rebot  ${EMPTY}  rebot${/}times.xml
    Check Times  ${SUITE.tests[0]}  20061227 12:00:00.000  20061227 12:00:01.000  1000
    Check Times  ${SUITE.tests[1]}  20061227 12:00:01.000  20061227 12:00:03.000  2000
    Check Times  ${SUITE.tests[2]}  20061227 12:00:03.000  20061227 12:00:07.000  4000
    Check Times  ${SUITE.tests[3]}  20061227 12:00:07.000  20061227 12:00:07.001  0001
    Check Times  ${SUITE.tests[4]}  20061227 12:00:07.001  20061227 12:00:07.003  0002
    Check Times  ${SUITE.tests[5]}  20061227 12:00:07.003  20061227 12:00:07.007  0004
    Check Times  ${SUITE}  20061227 11:59:59.000  20061227 12:00:08.999  9999
    Should Be Equal As Numbers  ${SUITE.test_count}  6
    Comment  2) Filter ouput created in earlier step and check  that times are set accordingly.
    Run Rebot  --include incl2 --include excl3 ${ESCAPES}  ${OUTFILE}
    Check Times  ${SUITE}  N/A  N/A  6004
    Check Times  ${SUITE.tests[0]}  20061227 12:00:01.000  20061227 12:00:03.000  2000
    Check Times  ${SUITE.tests[1]}  20061227 12:00:03.000  20061227 12:00:07.000  4000
    Check Times  ${SUITE.tests[2]}  20061227 12:00:07.003  20061227 12:00:07.007  004
    Should Be Equal As Numbers  ${SUITE.test_count}  3

*** Keywords ***
Create Input
    Create Output With Robot  ${INPUT FILE}  ${EMPTY}  ${TESTFILE}
    Create Directory  ${MYOUTDIR}

Remove Temps
    Remove Directory  ${MYOUTDIR}  recursive
    Remove File  ${INPUT FILE}

Run And Check Include And Exclude
    [Arguments]  ${params}  @{tests}
    Run Rebot  ${params} ${ESCAPES}  ${INPUT FILE}
    Stderr Should Be Empty
    Check Suite Contains Tests  ${SUITE}  @{tests}
    Should Be True  ${SUITE.all_stats.passed} == len(@{tests})
    Should Be True  ${SUITE.all_stats.failed} == 0
    ${exp_start} =  Evaluate  "${params}" == "" and "${ORIG_START}" or "N/A"
    ${exp_end} =  Evaluate  "${params}" == "" and "${ORIG_END}" or "N/A"
    Should Be Equal  ${SUITE.starttime}  ${exp_start}
    Should Be Equal  ${SUITE.endtime}  ${exp_end}
    Is Valid Elapsed Time  ${SUITE.elapsedtime}
    Should Be True  ${SUITE.elapsedtime} <= ${ORIGELAPSED}

Run And Check Error
    [Arguments]  ${params}  ${filter_msg}
    Run Rebot Without Processing Output  ${params} ${ESCAPES}  ${INPUT FILE}
    ${stderr} =  Get Stderr
    Should Be Equal  ${stderr.strip()}  [ ERROR ] Suite 'Include And Exclude' contains no test ${filter_msg}.\n\n Try --help for usage information.
    File Should Not Exist  ${OUTFILE}
