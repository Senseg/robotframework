*** Settings ***
Suite Setup     Run Tests  --variable FAIL:YES --log mylog.html --report myreport.html --summary mysummary.html --debugfile mydebug.txt  misc/suites/subsuites
Force Tags      regression   pybot  jybot
Resource        ../../../resources/resource.txt


*** Variables ***
${SEP_CHAR1}  =
${SEP_CHAR2}  -
${SEP_LINE1}  ${SEP_CHAR1 * 78}
${SEP_LINE2}  ${SEP_CHAR2 * 78}
${MSG_211}  2 critical tests, 1 passed, 1 failed\n 2 tests total, 1 passed, 1 failed
${MSG_110}  1 critical test, 1 passed, 0 failed\n 1 test total, 1 passed, 0 failed


*** Test Cases ***

Top Level Suite Start
    Check Stdout Contains  ${SEP_LINE1}\n Subsuites${SPACE * 69}\n ${SEP_LINE1}\n

Top Level Suite End
    ${status} =  Create Status Line  Subsuites  61  FAIL
    Check Stdout Contains  ${SEP_LINE1}\n ${status}\n ${MSG_211}\n ${SEP_LINE1}\n

Nestes Suite Start
    Check Stdout Contains  ${SEP_LINE1}\n Subsuites.Sub 1 :: Normal test cases${SPACE * 42}\n ${SEP_LINE1}\n

Nestes Suite End
    ${status} =  Create Status Line  Subsuites.Sub 2 :: Normal test cases  34  PASS
    Check Stdout Contains  ${SEP_LINE2}\n ${status}\n ${MSG_110}\n ${SEP_LINE1}\n

Passing Test
    ${status} =  Create Status Line  SubSuite2 First  55  PASS
    Check Stdout Contains  ${SEP_LINE1}\n ${status}\n ${SEP_LINE2}\n

Failing Test
    ${status} =  Create Status Line  SubSuite1 First  55  FAIL
    Check Stdout Contains  ${SEP_LINE1}\n ${status}\n This test was doomed to fail: YES != NO\n ${SEP_LINE2}\n

Outputs
    ${stdout} =  Get Stdout
    ${outputs} =  Evaluate  '''${stdout.replace('\\','\\\\')}'''.split('${SEP_LINE1}')[-1]
    Should Match Regexp  ${outputs}  Debug: \ \ .*mydebug.txt\n Output: \ .*output.xml\n Summary: .*mysummary.html\n Report: \ .*myreport.html\n Log: \ \ \ \ .*mylog.html

Long Document Should Be Cut From End
    ${doc} =  Evaluate  '0123456789' * 10
    Run Tests  --name My_Name --doc start${doc}end  misc/normal.html
    ${expbase} =  Evaluate  'My Name :: start' + '0123456789'*5
    Check Stdout Contains  ${SEP_LINE1}\n ${expbase}012345678...\n ${SEP_LINE1}\n
    Check Stdout Contains  ${SEP_LINE2}\n ${expbase}... | PASS |\n

Long Name Should Be Cut From Beginning
    ${name} =  Evaluate  '0123456789' * 10
    Run Tests  --name start${name}end --doc whatever  misc/normal.html
    ${expbase} =  Evaluate  '789' + '0123456789'*6+ 'end'
    Check Stdout Contains  ${SEP_LINE1}\n ...890123456${expbase}\n ${SEP_LINE1}\n
    Check Stdout Contains  ${SEP_LINE2}\n ...${expbase} | PASS |\n

Monitor Colors
    Run Tests  --monitorcolors off  misc/pass_and_fail.html
    Check Stdout Contains  | PASS |
    Check Stdout Contains  | FAIL |
    Log File  ${STDERR FILE}
    Run Tests  -C force  misc/pass_and_fail.html
    Check Stdout Does Not Contain  | PASS |
    Check Stdout Contains  PASS
    Check Stdout Does Not Contain  | FAIL |
    Check Stdout Contains  FAIL

Monitor Width
    ${name} =  Evaluate  'Start-' + '0123456789' * 9 + '-end'
    Run Tests  --monitorwidth 105 --name ${name} --doc x  misc/pass_and_fail.html
    Check Stdout Contains  ${SEP_CHAR1 * 105}\n ${name} :: x\n ${SEP_CHAR1 * 105}\n
    Check Stdout Contains  ${SEP_CHAR2 * 105}\n ...${name[7:]} | FAIL |\n ${MSG_211}\n ${SEP_CHAR1 * 105}\n
    ${statuts} =  Create Status Line  Pass  93  PASS
    Check Stdout Contains  ${SEP_CHAR1 * 105}\n ${statuts}\n ${SEP_CHAR2 * 105}\n
    ${statuts} =  Create Status Line  Fail :: FAIL Expected failure  68  FAIL
    Check Stdout Contains  ${SEP_CHAR2 * 105}\n ${statuts}\n Expected failure\n ${SEP_CHAR2 * 105}\n
    Run Tests  -W 20 --name ${name}  misc/pass_and_fail.html
    Check Stdout Contains  ${SEP_CHAR1 * 20}\n ...7890123456789-end\n ${SEP_CHAR1 * 20}\n
    Check Stdout Contains  ${SEP_CHAR2 * 20}\n ...6789-end | FAIL |\n ${MSG_211}\n ${SEP_CHAR1 * 20}\n
    Check Stdout Contains  ${SEP_CHAR1 * 20}\n Pass${SPACE * 8}| PASS |\n ${SEP_CHAR2 * 20}\n
    Check Stdout Contains  ${SEP_CHAR2 * 20}\n Fail :: ... | FAIL |\n Expected failure\n ${SEP_CHAR2 * 20}\n

Errors In Processing Command Line Options Should Be Only Displayed Once
    Run Tests  --splitoutputs this_causes_error  misc/pass_and_fail.html
    File Should Contain Exactly Once  ${STDERR FILE}  Option '--splitoutputs' expected integer value but got 'this_causes_error'. Default value used instead.



*** Keywords ***
Create Status Line
    [Arguments]  ${name}  ${padding}  ${status}
    [Return]  ${name}${SPACE * ${padding}}| ${status} |

File Should Contain Exactly Once
    [Arguments]  ${path}  ${expected}
    ${content} =  Get File  ${path}
    Should Be Equal  ${content.count("${expected}")}  ${1}
