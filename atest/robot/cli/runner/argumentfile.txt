*** Settings ***
Test Setup      Create Output Directory and Set Variables
Suite Teardown  Delete Environment Variable  ROBOT_SYSLOG_FILE
Default Tags    regression  pybot  jybot
Resource        cli_resource.txt


*** Test Cases ***

Argument File
    Create Argument File  ${ARGFILE}  --name From Argfile  -M Meta1:From AF  -M Meta2:To be overwritten
    ...  \# comment line  --outputdir ${CLI OUTDIR}  -l none  -r none  ${EMPTY}  -o output.xml  ${EMPTY}
    Run Tests Without Processing Output  -M Meta1:Overwritten -A ${ARGFILE} -M Meta2:cli  ${TESTFILE}
    Process Output  ${CLI OUTDIR}/output.xml
    Should Be Equal  ${SUITE.name}  From Argfile
    Should Be True  ${SUITE.metadata} == {'Meta1': 'From AF', 'Meta2': 'cli', 'Something': 'My Value'}

Two Argument Files
    Create Argument File  ${ARGFILE}  --metadata A1:Value1  --metadata A2:to be overridden
    Create Argument File  ${ARGFILE2}  --metadata A2:Value2
    Run Tests  -A ${ARGFILE} --argumentfile ${ARGFILE2}  ${TESTFILE}
    Should Be Equal  ${SUITE.metadata['A1']}  Value1
    Should Be Equal  ${SUITE.metadata['A2']}  Value2

Recursive Argument File
    Create Argument File  ${ARGFILE}  -M First:1  -M Second:overwritten  --argumentfile ${ARGFILE2}
    Create Argument File  ${ARGFILE2}  --metadata Second:2
    Run Tests  -A ${ARGFILE}  ${TESTFILE}
    Should Be Equal  ${SUITE.metadata['First']}  1
    Should Be Equal  ${SUITE.metadata['Second']}  2

Argument File with Non-ASCII Characters
    ${path} =  Join Path  ${CURDIR}/../../../testdata/parsing/unicode_paths/testäö.txt 
    Create Argument File  ${ARGFILE 3}  -D äëïöüÿ  -C off  ${path}
    ${output} =  Run Robot Directly  --argumentfile ${ARGFILE 3}
    Should Not Contain  ${output.upper()}  ERROR
    Should Contain  ${output}  Testäö :: äëïöüÿ


*** Keywords ***

Create Output Directory and Set Variables
    Create Output Directory
    Set Suite Variable  ${ARGFILE}    ${CLI OUTDIR}/arg_file_1.txt
    Set Suite Variable  ${ARGFILE 2}  ${CLI OUTDIR}/arg_file_2.txt
    Set Suite Variable  ${ARGFILE 3}  ${CLI OUTDIR}/ärg_fïlë_3.txt
    Set Environment Variable  ROBOT_SYSLOG_FILE  ${CLI OUTDIR}/syslog.txt

Create Argument File  [Arguments]  ${path}  @{lines}
    [Documentation]  Writes also UTF8 BOM to the file to test it's ignored
    ${content} =  Catenate  SEPARATOR=\n  @{lines}
    ${bom} =  Evaluate  __import__('codecs').BOM_UTF8.decode('UTF-8')
    Create File  ${path}  ${bom}${content}
