*** Settings ***
Test Setup      Create Output Directory
Force Tags    regression  pybot  jybot
Resource        cli_resource.txt


*** Test Cases ***

Output Only
    Run Tests Without Processing Output  --outputdir ${CLI OUTDIR} --output myoutput.xml --report none --log none  ${TESTFILE}
    Output Directory Should Contain  myoutput.xml

Output And Report
    Run Tests Without Processing Output  --outputdir ${CLI OUTDIR} --output myoutput.xml --report myreport.html --log none  ${TESTFILE}
    Output Directory Should Contain  myoutput.xml  myreport.html

Output And Log
    Run Tests Without Processing Output  --outputdir ${CLI OUTDIR} --output myoutput.xml --report none --log mylog.html --summary none  ${TESTFILE}
    Output Directory Should Contain  mylog.html  myoutput.xml

Output And Summary
    [Tags]    to_be_clarified
    Run Tests Without Processing Output  --outputdir ${CLI OUTDIR} -o myoutput.xml -r NONE -l none --summary mysummary.html  ${TESTFILE}
    Output Directory Should Contain  myoutput.xml  mysummary.html

Output None
    Run Tests Without Processing Output  --outputdir ${CLI OUTDIR} -o NONE -r None -l none  ${TESTFILE}
    Output Directory Should Be Empty

Debugfile Can Be Created When Output Is NONE
    Run Tests Without Processing Output  --outputdir ${CLI OUTDIR} -o NONE -r report.html -b debug.txt  ${TESTFILE}
    Output Directory Should Contain  debug.txt

All Outputs
    [Tags]    to_be_clarified
    Run Tests Without Processing Output  --outputdir=${CLI OUTDIR} --output=myoutput.xml --report=myreport.html --log=mylog.html -S mysummary.html  ${TESTFILE}
    Output Directory Should Contain  mylog.html  myoutput.xml  myreport.html  mysummary.html

All Outputs With Default Names
    ${path} =  Join Path  ${CURDIR}/../../..  testdata  ${TESTFILE}
    Run Robot Directly  --outputdir ${CLI OUTDIR} ${path}
    Output Directory Should Contain  log.html  output.xml  report.html

All Outputs Without Extensions
    [Tags]    to_be_clarified
    Run Tests Without Processing Output  --outputdir ${CLI OUTDIR} -o myoutput -r myreport -l mylog -S mysummary  ${TESTFILE}
    Output Directory Should Contain  mylog.html  myoutput.xml  myreport.html  mysummary.html

Outputs Into Different Dirs
    [Tags]    to_be_clarified
    Run Tests Without Processing Output  --outputdir ::invalid:: -o ${CLI OUTDIR}${/}o${/}o.xml -r ${CLI OUTDIR}${/}r${/}r.html -l ${CLI OUTDIR}${/}l${/}l.html --summary ${CLI OUTDIR}${/}s.htm  ${TESTFILE}
    Directory Should Contain  ${CLI OUTDIR}${/}o  o.xml
    Directory Should Contain  ${CLI OUTDIR}${/}r  r.html
    Directory Should Contain  ${CLI OUTDIR}${/}l  l.html
    Directory Should Contain  ${CLI OUTDIR}  l  o  r  s.htm

Invalid Output File
    [Documentation]  Test error handling when the xml output file cannot be opened for writing
    Create Directory  ${CLI OUTDIR}/directory.xml
    Run Tests Without Processing Output  --output ${CLI OUTDIR}/directory.xml  ${TESTFILE}
    Check Stderr Matches Regexp  \\[ ERROR \\] Opening output file '.*directory.xml' for writing failed: (IOError|FileNotFoundException): .*${USAGE_TIP}

Invalid Log, Report and Summary
    [Tags]    to_be_clarified
    [Documentation]  Test error handling when html files cannot be opened for writing
    ${directory} =  Join Path  ${CLI OUTDIR}/dir.html
    Create Directory  ${directory}
    Run Tests  --log ${directory} --report ${directory} --summary ${directory}  ${TESTFILE}
    Should Be Equal  ${SUITE.status}  PASS
    Check Stderr Matches Regexp  SEPARATOR=\n
    ...  \\[ ERROR \\] Opening summary file '.*dir.html' for writing failed: IOError: .*

    ...  \\[ ERROR \\] Opening report file '.*dir.html' for writing failed: IOError: .*
    ...  \\[ ERROR \\] Opening log file '.*dir.html' for writing failed: IOError: .*
