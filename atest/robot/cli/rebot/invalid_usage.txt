*** Settings ***
Force Tags    regression  pybot  jybot
Resource        rebot_cli_resource.txt


*** Test Cases ***

Invalid Options
    Rebot should fail  --invalid option  option --invalid not recognized
    Rebot should fail  --name valid -I   option -I not recognized

No Input
    Rebot should fail  ${EMPTY}  Expected at least 1 argument, got 0.

Non-Existing Input
    Rebot should fail  nönéx.xml  Reading XML source 'nönéx\\.xml' failed: Source file 'nönéx\\.xml' does not exist.*

Non-XML Input
    Create File  ${MYOUTDIR}/invalid.txt  Hello, world
    Rebot should fail  ${MYOUTDIR}${/}invalid.txt  (\\[Fatal Error\\] .*: Content is not allowed in prolog.\\n)?Reading XML source '.*invalid.txt' failed: .*

Incompatible XML
    Create File  ${MYOUTDIR}/invalid.xml  <not><our>type</our></not>
    Rebot should fail  ${MYOUTDIR}${/}invalid.xml  Reading XML source '.*invalid.xml' failed: Incompatible XML element 'not'

Invalid Output Directory
    Create File  ${MYOUTDIR}${/}not-dir
    Rebot should fail  -d ${MYOUTDIR}${/}not-dir${/}dir ${MYINPUT}
    ...  Creating log file directory '.*' failed: .*
    Rebot should fail  -d ${MYOUTDIR}${/}not-dir${/}dir -o out.xml -l none -r none ${MYINPUT}
    ...  Creating output file directory '.*' failed: .*

Invalid Argument Values
    Run Rebot   --suitestatlevel not_int --tagstatlink less_than_3x_:  ${MYINPUT}
    Verify Correct Errors in Stderr  Option '--suitestatlevel' expected integer value but got 'not_int'.  Default value used instead.\n
    Verify Correct Errors in Stderr  Invalid format for option '--tagstatlink'.  Expected 'tag:link:title' but got 'less_than_3x_:'.\n
    Should Be Equal  ${SUITE.status}  PASS


*** Keywords ***

Rebot Should Fail  [Arguments]  ${options}  ${exp msg}
    Set Runners
    ${rc}  ${output} =  Run And Return RC and Output  ${REBOT} ${options}
    Log  ${output}
    Should Be Equal As Integers  ${rc}  252
    Should Match Regexp  ${output}  ^\\[ .*ERROR.* \\] ${exp msg}${USAGETIP}$

Verify Correct Errors In Stderr
    [Arguments]  @{messages}
    ${error} =  Set Variable If  os.sep=='/'  ERROR  [ ERROR ]
    Check Stderr Contains  ${error}
    Check Stderr Contains  @{messages}
