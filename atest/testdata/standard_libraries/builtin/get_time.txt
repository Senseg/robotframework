*** Test Cases ***
Get Time As Timestamp
    ${time1} =  Get Time
    Should Match Regexp  ${time1}  \\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}
    ${time2} =  Get Time  give me timestamp, please
    Should Be True  '${time2}' >= '${time1}'

Get Time As Seconds After Epoch
    ${time} =  Get Time  epoch
    Should Be True  1000000000 < ${time} < 2000000000

Get Time As Parts
    @{time} =  Get Time  year, month, day, hour, min, sec
    Should Be True  2000 < @{time}[0] < 2100
    Should Be True  1 <= int('@{time}[1]') <= 12
    Should Be True  1 <= int('@{time}[2]') <= 31
    Should Be True  0 <= int('@{time}[3]') <= 23
    Should Be True  0 <= int('@{time}[4]') <= 59
    Should Be True  0 <= int('@{time}[5]') <= 59
    ${year}  ${min}  ${sec} =  Get Time  seconds and minutes and year and whatnot
    Should Be True  2000 < ${year} < 2100
    Should Be True  0 <= int('${min}') <= 59
    Should Be True  0 <= int('${sec}') <= 59

When Time Is Seconds After Epoch
    ${secs} =  Evaluate  1177665267 + time.altzone  modules=time
    ${time} =  Get Time  ${EMPTY}  ${secs}
    Should Be Equal  ${time}  2007-04-27 09:14:27
    ${secs} =  Convert To String  ${secs}
    ${time} =  Get Time  time_=${secs}
    Should Be Equal  ${time}  2007-04-27 09:14:27

When Time Is Timestamp
    ${secs} =  Get Time  secs  2007-04-27 09:14:27
    Should Be Equal  ${secs}  27

When Time Is Now
    ${time1} =  Get Time  timestamp  NOW
    Should Match Regexp  ${time1}  \\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}
    ${time2} =  Get Time  give me timestamp, please  NOW +1 seconds
    Should Be True  '${time2}' > '${time1}'

When Time Is Now +- Something
    ${time} =  Get Time  epoch  NOW
    ${time minus} =  Get Time  epoch  NOW - 1 hour
    ${time plus} =  Get Time  epoch  NOW + 2 minutes 1 second
    Should Be True  ${time minus} < ${time} < ${time plus}

Empty Format Is Interpreted As Timestamp When Time Given
    ${time} =  Get Time  ${EMPTY}  2007-04-27 09:14:27
    Should Be Equal  ${time}  2007-04-27 09:14:27

