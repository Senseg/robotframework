*** Settings ***
Library           String

*** Variables ***
${NSN}    nokia_siemens_networks
${TEXT IN COLUMNS}    robot\tframework\nis\tgood\tfor\ttesting
${FIRST LINE}    robot\tframework
${SECOND LINE}    is\tgood\tfor\ttesting
${ERROR MESSAGE}    My error message

*** Test Cases ***    Action                         Arguments
Fetch From Left
                      ${result} =                    Fetch From Left                                                             ${NSN}                _siemens
                      Should be Equal                ${result}                                                                   nokia

Fetch From Right
                      ${result} =                    Fetch From Right                                                            ${NSN}                _siemens_
                      Should Be Equal                ${result}                                                                   networks

Get Line
                      ${result} =                    Get Line                                                                    ${TEXT IN COLUMNS}    0
                      Should be equal                ${result}                                                                   ${FIRST LINE}
                      ${result} =                    Get Line                                                                    ${TEXT IN COLUMNS}    1
                      Should be equal                ${result}                                                                   ${SECOND LINE}

Get Line Count
                      ${result} =                    Get Line Count                                                              ${EMPTY}
                      Should be equal as integers    ${result}                                                                   ${0}
                      ${result} =                    Get Line Count                                                              ${SPACE}
                      Should be equal as integers    ${result}                                                                   ${1}
                      ${result} =                    Get Line Count                                                              ${TEXT IN COLUMNS}
                      Should be equal as integers    ${result}                                                                   2

Split To Lines
                      @{result} =                    Split To Lines                                                              ${TEXT IN COLUMNS}
                      Length Should Be               ${result}                                                                   2
                      Should be equal                @{result}[0]                                                                ${FIRST LINE}
                      Should be equal                @{result}[1]                                                                ${SECOND LINE}

Split To Lines With Start Only
                      @{result} =                    Split To Lines                                                              ${TEXT IN COLUMNS}    1
                      Should be equal                @{result}[0]                                                                ${SECOND LINE}

Split To Lines With Start And End
                      @{result} =                    Split To Lines                                                              ${TEXT IN COLUMNS}    0            1
                      Length Should Be               ${result}                                                                   1
                      Should be equal                @{result}[0]                                                                ${FIRST LINE}

Split To Lines With End Only
                      @{result} =                    Split To Lines                                                              ${TEXT IN COLUMNS}    ${EMPTY}     1
                      Length Should Be               ${result}                                                                   1
                      Should be equal                @{result}[0]                                                                ${FIRST LINE}

Split To Lines With Negative Values
                      @{result} =                    Split To Lines                                                              ${TEXT IN COLUMNS}    -1
                      Length Should Be               ${result}                                                                   1
                      Should be equal                @{result}[0]                                                                ${SECOND LINE}

Split To Lines With Invalid Start
                      [Documentation]                FAIL ValueError: Cannot convert 'start' argument 'invalid' to an integer
                      Split To Lines                 ${TEXT IN COLUMNS}                                                          invalid

Split To Lines With Invalid End
                      [Documentation]                FAIL ValueError: Cannot convert 'end' argument 'invalid' to an integer
                      Split To Lines                 ${TEXT IN COLUMNS}                                                          0                     invalid

Get Substring
                      ${result} =                    Get Substring                                                               Robot                 0            2
                      Should be equal                ${result}                                                                   Ro

Get Substring With Negative Values
                      ${result} =                    Get Substring                                                               Hello Robot           -3           -1
                      Should be equal                ${result}                                                                   bo

Get Substring With Start Only
                      ${result} =                    Get Substring                                                               Hello Robot           6
                      Should be equal                ${result}                                                                   Robot

Get Substring With Empty Start
                      ${result} =                    Get Substring                                                               Hello Robot           ${EMPTY}     5
                      Should be equal                ${result}                                                                   Hello

Get Substring With Invalid Start
                      [Documentation]                FAIL ValueError: Cannot convert 'start' argument 'invalid' to an integer
                      Get Substring                  Hello Robot                                                                 invalid

Get Substring With Invalid End
                      [Documentation]                FAIL ValueError: Cannot convert 'end' argument 'invalid' to an integer
                      Get Substring                  Hello Robot                                                                 2                     invalid

Should Be String Positive
                      Should be String               Robot
                      Should be string               ${space}
                      Should be string               ${EMPTY}

Should Be String Negative For Number
                      [Documentation]                FAIL ${ERROR MESSAGE}
                      Should be string               ${0}                                                                        ${ERROR MESSAGE}

Should Be String Negative For Boolean
                      [Documentation]                FAIL ${ERROR MESSAGE}
                      Should be string               ${TRUE}                                                                     ${ERROR MESSAGE}

Should Not Be String Positive
                      Should Not Be String           ${0}
                      Should Not Be String           ${TRUE}

Should Not Be String Negative
                      [Documentation]                FAIL ${ERROR MESSAGE}
                      Should not be string           Nokia                                                                       ${ERROR MESSAGE}

Should Be Lowercase Positive
                      Should Be Lowercase            foo bar

Should Be Lowercase Negative
                      [Documentation]                FAIL 'foo and bAr' is not lowercase
                      Should be lowercase            foo and bAr

Should Be Uppercase Positive
                      Should Be Uppercase            FOO BAR

Should Be Uppercase Negative
                      [Documentation]                FAIL 'FOO AND BaR' is not uppercase
                      Should be uppercase            FOO AND BaR

Should Be Titlecase Positive
                      Should be titlecase            Foo Bar!

Should Be Titlecase Negative
                      [Documentation]                FAIL 'Foo and Bar' is not titlecase
                      Should be titlecase            Foo and Bar

