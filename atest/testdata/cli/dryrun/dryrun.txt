*** Settings ***
Library  OperatingSystem
Variables  vars.py
Resource  ${RESOURCE PATH}

Library  DoesNotExist
Variables  wrong_path.py
Resource  NonExisting.tsv


*** Test Cases ***

Passing keywords
    Log  Hello from test
    ${contents}=  List Directory  .
    Simple UK

Keywords that would fail
    Fail
    Fail In Uk
    No Operation

Userkeyword return value
    ${quux}=  Some Return Value  ${foo}  ${bar}

For Loops
    [Documentation]  FAIL Keyword 'resource.Anarchy in the UK' expected 3 arguments, got 2.
    ::FOR  ${i}  IN RANGE  10
    \   Log  ${i}
    \   Simple UK
    For Loop in UK
    ::FOR  ${a}  ${b}  IN RANGE  ${NONE}
    \   Anarchy in the UK  1  2

Non-existing keyword name
    [Documentation]  FAIL No keyword with name 'Does not exist' found.
    Does not exist

Too few arguments
    [Documentation]  FAIL Keyword 'BuiltIn.Should Be Equal' expected 2 to 4 arguments, got 1.
    Should Be Equal  1

Too few arguments for UK
    [Documentation]  FAIL Keyword 'resource.Anarchy in the UK' expected 3 arguments, got 1.
    Anarchy in the UK  foo

Too many arguments
    [Documentation]  FAIL  Keyword 'BuiltIn.No Operation' expected 0 arguments, got 2.
    No Operation  ${foo}  @{list}

Invalid syntax in UK
    [Documentation]  FAIL Invalid argument '${arg'
    Invalid Syntax UK

Multiple Failures
    [Documentation]  FAIL Several failures occurred:\n\n1) Keyword 'BuiltIn.Should Be Equal' expected 2 to 4 arguments, got 1.\n\n2) No keyword with name 'Does not exist' found.
    Should Be Equal  1
    Does not exist
    
Arguments given as list variable
    [Documentation]  FAIL Keyword 'BuiltIn.Should Be Equal' expected 2 to 4 arguments, got 1.
    @{list} =  Create List  1  1
    Should Be Equal  @{list}
    Anarchy in the UK  @{list}
    Anarchy in the UK  @{list}  1
    @{empty list}  Create List
    Convert to Number   1  @{empty list}  @{empty list}
    Should Be Equal  @{foo


*** Keywords ***
Invalid Syntax UK
    [Arguments]  ${arg
    No Operation

Some Return Value
    [Arguments]  ${a1}  @{a2}
    [Return]  ${a1}@{a2[1]}

