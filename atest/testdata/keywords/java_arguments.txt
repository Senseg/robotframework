*** Settings ***
Library         ArgumentsJava
Library         ArgumentTypes
Library         ExampleJavaLibrary

*** Test Cases ***
Correct Number Of Arguments When No Defaults Or Varargs
    ${ret} =  A 0
    Equals  ${ret}  a_0
    ${ret} =  A 1  my arg
    Equals  ${ret}  a_1: my arg
    ${ret} =  A 3  a1  a2  a3
    Equals  ${ret}  a_3: a1 a2 a3

Too Few Arguments When No Defaults Or Varargs 1
    [Documentation]  FAIL Keyword 'ArgumentsJava.A 1' expected 1 argument, got 0.
    A 1

Too Few Arguments When No Defaults Or Varargs 2
    [Documentation]  FAIL Keyword 'ArgumentsJava.A 3' expected 3 arguments, got 2.
    A 3  a1  a2

Too Many Arguments When No Defaults Or Varargs 1
    [Documentation]  FAIL Keyword 'ArgumentsJava.A 0' expected 0 arguments, got 10.
    A 0  This  is  too  much  !  Really  way
    ...  too  much  !!!!!

Too Many Arguments When No Defaults Or Varargs 2
    [Documentation]  FAIL Keyword 'ArgumentsJava.A 1' expected 1 argument, got 2.
    A 1  Too  much

Too Many Arguments When No Defaults Or Varargs 3
    [Documentation]  FAIL Keyword 'ArgumentsJava.A 3' expected 3 arguments, got 4.
    A 3  a1  a2  a3  a4

Correct Number Of Arguments With Defaults
    ${ret} =  A 0 1
    Equals  ${ret}  a_0_1: default
    ${ret} =  A 0 1  This works too
    Equals  ${ret}  a_0_1: This works too
    ${ret} =  A 1 3  My argument
    Equals  ${ret}  a_1_3: My argument default default
    ${ret} =  A 1 3  My argument  My argument 2
    Equals  ${ret}  a_1_3: My argument My argument 2 default
    ${ret} =  A 1 3  My argument  My argument 2  My argument 3
    Equals  ${ret}  a_1_3: My argument My argument 2 My argument 3

Java Varargs Should Work
    ${ret} =  Java Varargs  My Argument 1  My Argument 2
    Equals  ${ret}  javaVarArgs: My Argument 1 My Argument 2
    ${ret} =  Java Varargs
    Equals  ${ret}  javaVarArgs:

Too Few Arguments With Defaults
    [Documentation]  FAIL Keyword 'ArgumentsJava.A 1 3' expected 1 to 3 arguments, got 0.
    A 1 3

Too Many Arguments With Defaults 1
    [Documentation]  FAIL Keyword 'ArgumentsJava.A 0 1' expected 0 to 1 arguments, got 2.
    A 0 1  Too  much

Too Many Arguments With Defaults 2
    [Documentation]  FAIL Keyword 'ArgumentsJava.A 1 3' expected 1 to 3 arguments, got 4.
    A 1 3  This  is  too  much

Correct Number Of Arguments With Varargs
    ${ret} =  A 0 N
    Equals  ${ret}  a_0_n:
    ${ret} =  A 0 N  My arg
    Equals  ${ret}  a_0_n: My arg
    ${ret} =  A 0 N  1  2  3  4
    Equals  ${ret}  a_0_n: 1 2 3 4
    ${ret} =  A 1 N  Required arg
    Equals  ${ret}  a_1_n: Required arg
    ${ret} =  A 1 N  Required arg  plus one
    Equals  ${ret}  a_1_n: Required arg plus one
    ${ret} =  A 1 N  1 (req)  2  3  4  5  6
    ...  7  8  9
    Equals  ${ret}  a_1_n: 1 (req) 2 3 4 5 6 7 8 9

Too Few Arguments With Varargs
    [Documentation]  FAIL Keyword 'ArgumentsJava.A 1 N' expected at least 1 argument, got 0.
    A 1 N

Varargs Work Also With Arrays And Lists
    ${list} =  List  Hello  string  array  world
    ${array1} =  Get String Array  ${list}
    ${array2} =  Get String Array  ${array1}
    ${array3} =  Get String Array  Hello  string  array  world
    Equals  ${array1}  ${array2}
    Equals  ${array2}  ${array3}

Valid Arguments For Keyword Expecting Non String Scalar Arguments
    Byte 1  ${1}
    Byte 2  ${2}
    Short 1  ${100}
    Short 2  ${-200}
    Integer 1  ${100000}
    Integer 2  ${-200000}
    Long 1  ${1000000000000}
    Long 2  ${-2000000000000}
    Float 1  ${3.14}
    Float 2  ${0}
    Double 1  ${10e10}
    Double 2  ${-10e-10}
    Boolean 1  ${True}
    Boolean 2  ${False}
    Char 1  x
    Char 2  y
    Object  Hello
    Object  ${42}
    Object  ${3.14}
    Object  ${true}
    Object  ${null}
    ${obj} =  Get Java Object  my name
    Object  ${obj}
    ${ht} =  Get Hashtable
    Object  ${ht}
    Set To Hashtable  ${ht}  my key  my value
    Check In Hashtable  ${ht}  my key  my value

Valid Arguments For Keyword Expecting Non String Array Arguments
    Byte 1 Array
    Byte 1 Array  ${0}  ${1}  ${2}
    Byte 2 Array
    Byte 2 Array  ${0}  ${1}  ${2}
    Short 1 Array
    Short 1 Array  ${0}  ${1}  ${2}
    Short 2 Array
    Short 2 Array  ${0}  ${1}  ${2}
    Integer 1 Array
    Integer 1 Array  ${0}  ${1}  ${2}  ${10000}  ${-10000}
    Integer 2 Array
    Integer 2 Array  ${0}  ${1}  ${2}  ${10000}  ${-10000}
    Long 1 Array
    Long 1 Array  ${0}  ${1}  ${2}  ${10000}  ${-10000}
    Long 2 Array
    Long 2 Array  ${0}  ${1}  ${2}  ${10000}  ${-10000}
    Float 1 Array
    Float 1 Array  ${0}  ${1}  ${2}  ${-3.14}  ${10*3}
    Float 2 Array
    Float 2 Array  ${0}  ${1}  ${2}  ${-3.14}  ${10*3}
    Double 1 Array
    Double 1 Array  ${0}  ${1}  ${2}  ${-3.14}  ${10*3}
    Double 2 Array
    Double 2 Array  ${0}  ${1}  ${2}  ${-3.14}  ${10*3}
    Boolean 1 Array
    Boolean 1 Array  ${True}  ${False}  ${True}  ${False}
    Boolean 2 Array
    Boolean 2 Array  ${True}  ${False}  ${True}  ${False}
    Char 1 Array
    Char 1 Array  c  h  a  r  s
    Char 2 Array
    Char 2 Array  c  h  a  r  s
    ${obj} =  Get Java Object  my name
    ${ht} =  Get Hashtable
    Object Array
    Object Array  ${obj}  ${ht}  hello world  ${42}  ${null}

Invalid Argument Types 1
    [Documentation]  FAIL Argument at position 1 cannot be coerced to integer
    Integer 1  this is not an integer

Invalid Argument Types 2
    [Documentation]  FAIL TypeError: short1(): 1st arg can't be coerced to short
    Short 1  ${10000000000000000}

Invalid Argument Types 3
    [Documentation]  FAIL TypeError: char2(): 1st arg can't be coerced to java.lang.Character
    Char 2  this is a string and not a char

Invalid Argument Types 4
    [Documentation]  FAIL TypeError: checkInHashtable(): 1st arg can't be coerced to java.util.Hashtable
    Check In Hashtable  string, not a hashtable  key  value

Invalid Argument Types 5
    [Documentation]  FAIL TypeError: integer2_array(): 1st arg can't be coerced to java.lang.Integer[]
    Integer 2 Array  ${1}  ${2}  3

Invalid Argument Types 6
    [Documentation]  FAIL TypeError: string_array(): 1st arg can't be coerced to String[]
    String Array  1  2  ${3}

Invalid Argument Types 7
    [Documentation]  FAIL TypeError: string(): 1st arg can't be coerced to String
    ArgumentTypes.String  ${42}

